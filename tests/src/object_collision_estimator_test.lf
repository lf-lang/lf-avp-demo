target C {
    cmake-include: "include/CMakeListsExtension.txt",
    files: ["../../src/include/utils.hpp"],
    flags: ["-g"],
    compiler: "g++",
    timeout: 1 sec,
    threads: 4
};

import filter_and_transform from "../../src/filter_and_transform/filter_and_transform_main.lf";
import point_cloud_fusion from "../../src/point_cloud_fusion/point_cloud_fusion_main.lf";
import ray_ground_classifier from "../../src/ray_ground_classifier/ray_ground_classifier_main.lf";
import euclidean_cluster_detector from "../../src/euclidean_cluster_detector/euclidean_cluster_detector_main.lf";
import off_map_obstacles_filter from "../../src/off_map_obstacles_filter/off_map_obstacles_filter_main.lf";
import object_collision_estimator from "../../src/object_collision_estimator/object_collision_estimator_main.lf";
import lanelet2_map_provider from "../../src/lanelet2_map_provider/lanelet2_map_provider_main.lf";



federated reactor {    
    fat = new[2] filter_and_transform();
    pcf = new point_cloud_fusion(in_width = 2);
    rgc = new ray_ground_classifier();
    ecd = new euclidean_cluster_detector();
    omof = new off_map_obstacles_filter();
//    oce = new object_collision_estimator();
//    
//    map_provider = new lanelet2_map_provider();
    
    fat.points_out -> pcf.points_in serialized "ros2";
    pcf.points_out -> rgc.points_in serialized "ros2";
    rgc.points_non_ground -> ecd.points_in serialized "ros2";
    ecd.bounding_boxes -> omof.original_bounding_boxes serialized "ros2";
//    omof.request -> map_provider.request serialized "ros2";
//    map_provider.map -> omof.map serialized "ros2";
//    omof.modified_bounding_boxes -> oce.filtered_lidar_boxes serialized "ros2";
    
}