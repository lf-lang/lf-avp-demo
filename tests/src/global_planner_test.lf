target CCpp;

import filter_and_transform from "../../src/filter_and_transform/filter_and_transform_main.lf";
import point_cloud_fusion from "../../src/point_cloud_fusion/point_cloud_fusion_main.lf";
import voxel_grid_downsampler from "../../src/voxel_grid_downsampler/voxel_grid_downsampler_main.lf";
import lgsvl_interface from "../../src/lgsvl_interface/lgsvl_interface_main.lf"
import global_planner from "../../src/global_planner/global_planner_main.lf"
import robot_state_publisher from "../../src/robot_state_publisher/robot_state_publisher_main.lf";
import lanelet2_map_provider from "../../src/lanelet2_map_provider/lanelet2_map_provider_main.lf"
import ndt_map_publisher from "../../src/ndt_map_publisher/ndt_map_publisher_main.lf";
import p2d_ndt_localizer from "../../src/p2d_ndt_localizer/p2d_ndt_localizer_main.lf";


federated reactor {
    filter_and_transform = new[2] filter_and_transform();
    point_cloud_fusion = new point_cloud_fusion(in_width = 2);
    voxel_grid_downsampler = new voxel_grid_downsampler();
    lgsvl = new lgsvl_interface();
    rsp = new robot_state_publisher();
    global_planner = new global_planner();
    map_provider = new lanelet2_map_provider();
    ndt_map_publisher = new ndt_map_publisher();
    p2d_ndt_localizer = new p2d_ndt_localizer();

    lgsvl.vehicle_kinematic_state -> 
        global_planner.vehicle_kinematic_state serializer "ROS2";

    global_planner.map_request -> map_provider.request serializer "ROS2";
    map_provider.map -> global_planner.map serializer "ROS2";

    filter_and_transform.points_out -> point_cloud_fusion.points_in serializer "ros2";
    point_cloud_fusion.points_out -> voxel_grid_downsampler.points_in serializer "ros2";
    ndt_map_publisher.points_out -> p2d_ndt_localizer.ndt_map_points_in serializer "ros2";
    voxel_grid_downsampler.points_out -> p2d_ndt_localizer.fused_downsampled_points_in serializer "ros2";

    reaction(global_planner.global_path) {=
        info_print(
            "x: %f, y: %f",
            global_planner.global_path->value->goal_point.x,
            global_planner.global_path->value->goal_point.y
        );
    =}

}
