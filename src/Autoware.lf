target C {
    cmake: true,
    cmake-include: "include/CMakeListsExtension.txt",
    threads: 1,
    flags: ["-Wno-write-strings"],
    compiler: "g++"
};

import filter_and_transform from "filter_and_transform/filter_and_transform_main.lf";
import point_cloud_fusion from "point_cloud_fusion/point_cloud_fusion_main.lf";
import voxel_grid_downsampler from "voxel_grid_downsampler/voxel_grid_downsampler_main.lf";
import ray_ground_classifier from "ray_ground_classifier/ray_ground_classifier_main.lf";
import euclidean_cluster_detector from "euclidean_cluster_detector/euclidean_cluster_detector_main.lf";
import ndt_map_publisher from "ndt_map_publisher/ndt_map_publisher_main.lf";
import p2d_ndt_localizer from "p2d_ndt_localizer/p2d_ndt_localizer_main.lf";

federated reactor {
    fat = new[2] filter_and_transform();
    pcf = new point_cloud_fusion(in_width = 2);
    bgd = new voxel_grid_downsampler();
    rgc = new ray_ground_classifier();
    ecd = new euclidean_cluster_detector();
    nmp = new ndt_map_publisher();
    pnl = new p2d_ndt_localizer();
    
	fat.points_out -> pcf.points_in serialized "ros2";
	pcf.points_out -> bgd.points_in serialized "ros2";
	pcf.points_out -> rgc.points_in serialized "ros2";
	rgc.points_non_ground -> ecd.points_in serialized "ros2";
	nmp.points_out -> pnl.ndt_map_points_in serialized "ros2";
	bgd.points_out -> pnl.fused_downsampled_points_in serialized "ros2";
}
